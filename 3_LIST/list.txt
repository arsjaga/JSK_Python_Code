Python List

Create a Python List

We create a list by placing elements inside square brackets [], separated by commas. For example,

Prog 1:

        # a list of three elements
        ages = [19, 26, 29]
        print(ages)

        # Output: [19, 26, 29]

List Characteristics

Lists are:

    Ordered - They maintain the order of elements.
    Mutable - Items can be changed after creation.
    Allow duplicates - They can contain duplicate values.

Access List Elements

Each element in a list is associated with a number, known as a index.

The index always starts from 0. The first element of a list is at index 0, the second element is at index 1, and so on. 

Prog 2:

        languages = ['Python', 'Swift', 'C++']

        # access the first element
        print(languages[0])   # Python

        # access the third element
        print(languages[2])   # C++

Add Elements to a Python List

We use the append() method to add an element to the end of a Python list. For example,

Prog 3:

        fruits = ['apple', 'banana', 'orange']
        print('Original List:', fruits)

        # using append method 
        fruits.append('cherry')


        print('Updated List:', fruits)

        Output

        Original List: ['apple', 'banana', 'orange']
        Updated List: ['apple', 'banana', 'orange', 'cherry']

Change List Items

We can change the items of a list by assigning new values using the = operator. For example,

Prog 4:
        colors = ['Red', 'Black', 'Green']
        print('Original List:', colors)

        # changing the third item to 'Blue'
        colors[2] = 'Blue'


        print('Updated List:', colors)

        Output

        Original List: ['Red', 'Black', 'Green']
        Updated List: ['Red', 'Black', 'Blue']

Remove an Item From a List

We can remove an item from a list using the remove() method. For example,

Prog 5:
        numbers = [2,4,7,9]

        # remove 4 from the list
        numbers.remove(4)


        print(numbers) 

        # Output: [2, 7, 9]

Python List Length

We can use the built-in len() function to find the number of elements in a list. For example,

Prog 6:

        cars = ['BMW', 'Mercedes', 'Tesla']

        print('Total Elements: ', len(cars))  
        
        # Output: Total Elements:  3

Iterating Through a List

We can use a for loop to iterate over the elements of a list. For example,

Prog 7:
        fruits = ['apple', 'banana', 'orange']

        # iterate through the list
        for fruit in fruits:
            print(fruit)

        Output

        apple
        banana
        orange

Python List Methods

Python has many useful list methods that make it really easy to work with lists.


Method
	Description


append()
	Adds an item to the end of the list


extend()
	Adds items of lists and other iterables to the end of the list


insert()
	Inserts an item at the specified index


remove()
	Removes item present at the given index


pop()
	Returns and removes item present at the given index


clear()
	Removes all items from the list


index()
	Returns the index of the first matched item


count()
	Returns the count of the specified item in the list


sort()
	Sorts the list in ascending/descending order


reverse()
	Reverses the item of the list


copy()
	Returns the shallow copy of the list
